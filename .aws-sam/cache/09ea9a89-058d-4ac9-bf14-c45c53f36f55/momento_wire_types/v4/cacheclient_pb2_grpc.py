# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from . import cacheclient_pb2 as cacheclient__pb2


class ScsStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Get = channel.unary_unary(
                '/cache_client.Scs/Get',
                request_serializer=cacheclient__pb2._GetRequest.SerializeToString,
                response_deserializer=cacheclient__pb2._GetResponse.FromString,
                )
        self.Set = channel.unary_unary(
                '/cache_client.Scs/Set',
                request_serializer=cacheclient__pb2._SetRequest.SerializeToString,
                response_deserializer=cacheclient__pb2._SetResponse.FromString,
                )
        self.SetIfNotExists = channel.unary_unary(
                '/cache_client.Scs/SetIfNotExists',
                request_serializer=cacheclient__pb2._SetIfNotExistsRequest.SerializeToString,
                response_deserializer=cacheclient__pb2._SetIfNotExistsResponse.FromString,
                )
        self.Delete = channel.unary_unary(
                '/cache_client.Scs/Delete',
                request_serializer=cacheclient__pb2._DeleteRequest.SerializeToString,
                response_deserializer=cacheclient__pb2._DeleteResponse.FromString,
                )
        self.KeysExist = channel.unary_unary(
                '/cache_client.Scs/KeysExist',
                request_serializer=cacheclient__pb2._KeysExistRequest.SerializeToString,
                response_deserializer=cacheclient__pb2._KeysExistResponse.FromString,
                )
        self.Increment = channel.unary_unary(
                '/cache_client.Scs/Increment',
                request_serializer=cacheclient__pb2._IncrementRequest.SerializeToString,
                response_deserializer=cacheclient__pb2._IncrementResponse.FromString,
                )
        self.UpdateTtl = channel.unary_unary(
                '/cache_client.Scs/UpdateTtl',
                request_serializer=cacheclient__pb2._UpdateTtlRequest.SerializeToString,
                response_deserializer=cacheclient__pb2._UpdateTtlResponse.FromString,
                )
        self.ItemGetTtl = channel.unary_unary(
                '/cache_client.Scs/ItemGetTtl',
                request_serializer=cacheclient__pb2._ItemGetTtlRequest.SerializeToString,
                response_deserializer=cacheclient__pb2._ItemGetTtlResponse.FromString,
                )
        self.ItemGetType = channel.unary_unary(
                '/cache_client.Scs/ItemGetType',
                request_serializer=cacheclient__pb2._ItemGetTypeRequest.SerializeToString,
                response_deserializer=cacheclient__pb2._ItemGetTypeResponse.FromString,
                )
        self.DictionaryGet = channel.unary_unary(
                '/cache_client.Scs/DictionaryGet',
                request_serializer=cacheclient__pb2._DictionaryGetRequest.SerializeToString,
                response_deserializer=cacheclient__pb2._DictionaryGetResponse.FromString,
                )
        self.DictionaryFetch = channel.unary_unary(
                '/cache_client.Scs/DictionaryFetch',
                request_serializer=cacheclient__pb2._DictionaryFetchRequest.SerializeToString,
                response_deserializer=cacheclient__pb2._DictionaryFetchResponse.FromString,
                )
        self.DictionarySet = channel.unary_unary(
                '/cache_client.Scs/DictionarySet',
                request_serializer=cacheclient__pb2._DictionarySetRequest.SerializeToString,
                response_deserializer=cacheclient__pb2._DictionarySetResponse.FromString,
                )
        self.DictionaryIncrement = channel.unary_unary(
                '/cache_client.Scs/DictionaryIncrement',
                request_serializer=cacheclient__pb2._DictionaryIncrementRequest.SerializeToString,
                response_deserializer=cacheclient__pb2._DictionaryIncrementResponse.FromString,
                )
        self.DictionaryDelete = channel.unary_unary(
                '/cache_client.Scs/DictionaryDelete',
                request_serializer=cacheclient__pb2._DictionaryDeleteRequest.SerializeToString,
                response_deserializer=cacheclient__pb2._DictionaryDeleteResponse.FromString,
                )
        self.DictionaryLength = channel.unary_unary(
                '/cache_client.Scs/DictionaryLength',
                request_serializer=cacheclient__pb2._DictionaryLengthRequest.SerializeToString,
                response_deserializer=cacheclient__pb2._DictionaryLengthResponse.FromString,
                )
        self.SetFetch = channel.unary_unary(
                '/cache_client.Scs/SetFetch',
                request_serializer=cacheclient__pb2._SetFetchRequest.SerializeToString,
                response_deserializer=cacheclient__pb2._SetFetchResponse.FromString,
                )
        self.SetUnion = channel.unary_unary(
                '/cache_client.Scs/SetUnion',
                request_serializer=cacheclient__pb2._SetUnionRequest.SerializeToString,
                response_deserializer=cacheclient__pb2._SetUnionResponse.FromString,
                )
        self.SetDifference = channel.unary_unary(
                '/cache_client.Scs/SetDifference',
                request_serializer=cacheclient__pb2._SetDifferenceRequest.SerializeToString,
                response_deserializer=cacheclient__pb2._SetDifferenceResponse.FromString,
                )
        self.SetContains = channel.unary_unary(
                '/cache_client.Scs/SetContains',
                request_serializer=cacheclient__pb2._SetContainsRequest.SerializeToString,
                response_deserializer=cacheclient__pb2._SetContainsResponse.FromString,
                )
        self.SetLength = channel.unary_unary(
                '/cache_client.Scs/SetLength',
                request_serializer=cacheclient__pb2._SetLengthRequest.SerializeToString,
                response_deserializer=cacheclient__pb2._SetLengthResponse.FromString,
                )
        self.SetPop = channel.unary_unary(
                '/cache_client.Scs/SetPop',
                request_serializer=cacheclient__pb2._SetPopRequest.SerializeToString,
                response_deserializer=cacheclient__pb2._SetPopResponse.FromString,
                )
        self.ListPushFront = channel.unary_unary(
                '/cache_client.Scs/ListPushFront',
                request_serializer=cacheclient__pb2._ListPushFrontRequest.SerializeToString,
                response_deserializer=cacheclient__pb2._ListPushFrontResponse.FromString,
                )
        self.ListPushBack = channel.unary_unary(
                '/cache_client.Scs/ListPushBack',
                request_serializer=cacheclient__pb2._ListPushBackRequest.SerializeToString,
                response_deserializer=cacheclient__pb2._ListPushBackResponse.FromString,
                )
        self.ListPopFront = channel.unary_unary(
                '/cache_client.Scs/ListPopFront',
                request_serializer=cacheclient__pb2._ListPopFrontRequest.SerializeToString,
                response_deserializer=cacheclient__pb2._ListPopFrontResponse.FromString,
                )
        self.ListPopBack = channel.unary_unary(
                '/cache_client.Scs/ListPopBack',
                request_serializer=cacheclient__pb2._ListPopBackRequest.SerializeToString,
                response_deserializer=cacheclient__pb2._ListPopBackResponse.FromString,
                )
        self.ListErase = channel.unary_unary(
                '/cache_client.Scs/ListErase',
                request_serializer=cacheclient__pb2._ListEraseRequest.SerializeToString,
                response_deserializer=cacheclient__pb2._ListEraseResponse.FromString,
                )
        self.ListRemove = channel.unary_unary(
                '/cache_client.Scs/ListRemove',
                request_serializer=cacheclient__pb2._ListRemoveRequest.SerializeToString,
                response_deserializer=cacheclient__pb2._ListRemoveResponse.FromString,
                )
        self.ListFetch = channel.unary_unary(
                '/cache_client.Scs/ListFetch',
                request_serializer=cacheclient__pb2._ListFetchRequest.SerializeToString,
                response_deserializer=cacheclient__pb2._ListFetchResponse.FromString,
                )
        self.ListLength = channel.unary_unary(
                '/cache_client.Scs/ListLength',
                request_serializer=cacheclient__pb2._ListLengthRequest.SerializeToString,
                response_deserializer=cacheclient__pb2._ListLengthResponse.FromString,
                )
        self.ListConcatenateFront = channel.unary_unary(
                '/cache_client.Scs/ListConcatenateFront',
                request_serializer=cacheclient__pb2._ListConcatenateFrontRequest.SerializeToString,
                response_deserializer=cacheclient__pb2._ListConcatenateFrontResponse.FromString,
                )
        self.ListConcatenateBack = channel.unary_unary(
                '/cache_client.Scs/ListConcatenateBack',
                request_serializer=cacheclient__pb2._ListConcatenateBackRequest.SerializeToString,
                response_deserializer=cacheclient__pb2._ListConcatenateBackResponse.FromString,
                )
        self.ListRetain = channel.unary_unary(
                '/cache_client.Scs/ListRetain',
                request_serializer=cacheclient__pb2._ListRetainRequest.SerializeToString,
                response_deserializer=cacheclient__pb2._ListRetainResponse.FromString,
                )
        self.SortedSetPut = channel.unary_unary(
                '/cache_client.Scs/SortedSetPut',
                request_serializer=cacheclient__pb2._SortedSetPutRequest.SerializeToString,
                response_deserializer=cacheclient__pb2._SortedSetPutResponse.FromString,
                )
        self.SortedSetFetch = channel.unary_unary(
                '/cache_client.Scs/SortedSetFetch',
                request_serializer=cacheclient__pb2._SortedSetFetchRequest.SerializeToString,
                response_deserializer=cacheclient__pb2._SortedSetFetchResponse.FromString,
                )
        self.SortedSetGetScore = channel.unary_unary(
                '/cache_client.Scs/SortedSetGetScore',
                request_serializer=cacheclient__pb2._SortedSetGetScoreRequest.SerializeToString,
                response_deserializer=cacheclient__pb2._SortedSetGetScoreResponse.FromString,
                )
        self.SortedSetRemove = channel.unary_unary(
                '/cache_client.Scs/SortedSetRemove',
                request_serializer=cacheclient__pb2._SortedSetRemoveRequest.SerializeToString,
                response_deserializer=cacheclient__pb2._SortedSetRemoveResponse.FromString,
                )
        self.SortedSetIncrement = channel.unary_unary(
                '/cache_client.Scs/SortedSetIncrement',
                request_serializer=cacheclient__pb2._SortedSetIncrementRequest.SerializeToString,
                response_deserializer=cacheclient__pb2._SortedSetIncrementResponse.FromString,
                )
        self.SortedSetGetRank = channel.unary_unary(
                '/cache_client.Scs/SortedSetGetRank',
                request_serializer=cacheclient__pb2._SortedSetGetRankRequest.SerializeToString,
                response_deserializer=cacheclient__pb2._SortedSetGetRankResponse.FromString,
                )
        self.SortedSetLength = channel.unary_unary(
                '/cache_client.Scs/SortedSetLength',
                request_serializer=cacheclient__pb2._SortedSetLengthRequest.SerializeToString,
                response_deserializer=cacheclient__pb2._SortedSetLengthResponse.FromString,
                )
        self.SortedSetLengthByScore = channel.unary_unary(
                '/cache_client.Scs/SortedSetLengthByScore',
                request_serializer=cacheclient__pb2._SortedSetLengthByScoreRequest.SerializeToString,
                response_deserializer=cacheclient__pb2._SortedSetLengthByScoreResponse.FromString,
                )


class ScsServicer(object):
    """Missing associated documentation comment in .proto file."""

    def Get(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Set(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetIfNotExists(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Delete(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def KeysExist(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Increment(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateTtl(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ItemGetTtl(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ItemGetType(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DictionaryGet(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DictionaryFetch(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DictionarySet(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DictionaryIncrement(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DictionaryDelete(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DictionaryLength(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetFetch(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetUnion(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetDifference(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetContains(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetLength(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetPop(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListPushFront(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListPushBack(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListPopFront(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListPopBack(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListErase(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListRemove(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListFetch(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListLength(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListConcatenateFront(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListConcatenateBack(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListRetain(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SortedSetPut(self, request, context):
        """Sorted Set Operations
        A sorted set is a collection of elements ordered by their score.
        The elements with same score are ordered lexicographically.

        Add or Updates new element with its score to the Sorted Set.
        If sorted set doesn't exist, a new one is created with the specified
        element and its associated score.
        If an element exists, then its associate score gets overridden with the one
        provided in this operation.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SortedSetFetch(self, request, context):
        """Fetches a subset of elements in the sorted set.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SortedSetGetScore(self, request, context):
        """Gets the specified element and its associated score if it exists in the
        sorted set.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SortedSetRemove(self, request, context):
        """Removes specified elements and their associated scores
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SortedSetIncrement(self, request, context):
        """Changes the score associated with the element by specified amount.
        If the provided amount is negative, then the score associated with the
        element is decremented.
        If the element that needs to be incremented isn't present in the sorted
        set, it is added with specified number as the score.
        If the set itself doesn't exist then a new one with specified element and
        score is created.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SortedSetGetRank(self, request, context):
        """Gives the rank of an element.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SortedSetLength(self, request, context):
        """Returns length of the sorted set
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SortedSetLengthByScore(self, request, context):
        """Returns number of elements in the sorted set between a given min and max score
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ScsServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Get': grpc.unary_unary_rpc_method_handler(
                    servicer.Get,
                    request_deserializer=cacheclient__pb2._GetRequest.FromString,
                    response_serializer=cacheclient__pb2._GetResponse.SerializeToString,
            ),
            'Set': grpc.unary_unary_rpc_method_handler(
                    servicer.Set,
                    request_deserializer=cacheclient__pb2._SetRequest.FromString,
                    response_serializer=cacheclient__pb2._SetResponse.SerializeToString,
            ),
            'SetIfNotExists': grpc.unary_unary_rpc_method_handler(
                    servicer.SetIfNotExists,
                    request_deserializer=cacheclient__pb2._SetIfNotExistsRequest.FromString,
                    response_serializer=cacheclient__pb2._SetIfNotExistsResponse.SerializeToString,
            ),
            'Delete': grpc.unary_unary_rpc_method_handler(
                    servicer.Delete,
                    request_deserializer=cacheclient__pb2._DeleteRequest.FromString,
                    response_serializer=cacheclient__pb2._DeleteResponse.SerializeToString,
            ),
            'KeysExist': grpc.unary_unary_rpc_method_handler(
                    servicer.KeysExist,
                    request_deserializer=cacheclient__pb2._KeysExistRequest.FromString,
                    response_serializer=cacheclient__pb2._KeysExistResponse.SerializeToString,
            ),
            'Increment': grpc.unary_unary_rpc_method_handler(
                    servicer.Increment,
                    request_deserializer=cacheclient__pb2._IncrementRequest.FromString,
                    response_serializer=cacheclient__pb2._IncrementResponse.SerializeToString,
            ),
            'UpdateTtl': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateTtl,
                    request_deserializer=cacheclient__pb2._UpdateTtlRequest.FromString,
                    response_serializer=cacheclient__pb2._UpdateTtlResponse.SerializeToString,
            ),
            'ItemGetTtl': grpc.unary_unary_rpc_method_handler(
                    servicer.ItemGetTtl,
                    request_deserializer=cacheclient__pb2._ItemGetTtlRequest.FromString,
                    response_serializer=cacheclient__pb2._ItemGetTtlResponse.SerializeToString,
            ),
            'ItemGetType': grpc.unary_unary_rpc_method_handler(
                    servicer.ItemGetType,
                    request_deserializer=cacheclient__pb2._ItemGetTypeRequest.FromString,
                    response_serializer=cacheclient__pb2._ItemGetTypeResponse.SerializeToString,
            ),
            'DictionaryGet': grpc.unary_unary_rpc_method_handler(
                    servicer.DictionaryGet,
                    request_deserializer=cacheclient__pb2._DictionaryGetRequest.FromString,
                    response_serializer=cacheclient__pb2._DictionaryGetResponse.SerializeToString,
            ),
            'DictionaryFetch': grpc.unary_unary_rpc_method_handler(
                    servicer.DictionaryFetch,
                    request_deserializer=cacheclient__pb2._DictionaryFetchRequest.FromString,
                    response_serializer=cacheclient__pb2._DictionaryFetchResponse.SerializeToString,
            ),
            'DictionarySet': grpc.unary_unary_rpc_method_handler(
                    servicer.DictionarySet,
                    request_deserializer=cacheclient__pb2._DictionarySetRequest.FromString,
                    response_serializer=cacheclient__pb2._DictionarySetResponse.SerializeToString,
            ),
            'DictionaryIncrement': grpc.unary_unary_rpc_method_handler(
                    servicer.DictionaryIncrement,
                    request_deserializer=cacheclient__pb2._DictionaryIncrementRequest.FromString,
                    response_serializer=cacheclient__pb2._DictionaryIncrementResponse.SerializeToString,
            ),
            'DictionaryDelete': grpc.unary_unary_rpc_method_handler(
                    servicer.DictionaryDelete,
                    request_deserializer=cacheclient__pb2._DictionaryDeleteRequest.FromString,
                    response_serializer=cacheclient__pb2._DictionaryDeleteResponse.SerializeToString,
            ),
            'DictionaryLength': grpc.unary_unary_rpc_method_handler(
                    servicer.DictionaryLength,
                    request_deserializer=cacheclient__pb2._DictionaryLengthRequest.FromString,
                    response_serializer=cacheclient__pb2._DictionaryLengthResponse.SerializeToString,
            ),
            'SetFetch': grpc.unary_unary_rpc_method_handler(
                    servicer.SetFetch,
                    request_deserializer=cacheclient__pb2._SetFetchRequest.FromString,
                    response_serializer=cacheclient__pb2._SetFetchResponse.SerializeToString,
            ),
            'SetUnion': grpc.unary_unary_rpc_method_handler(
                    servicer.SetUnion,
                    request_deserializer=cacheclient__pb2._SetUnionRequest.FromString,
                    response_serializer=cacheclient__pb2._SetUnionResponse.SerializeToString,
            ),
            'SetDifference': grpc.unary_unary_rpc_method_handler(
                    servicer.SetDifference,
                    request_deserializer=cacheclient__pb2._SetDifferenceRequest.FromString,
                    response_serializer=cacheclient__pb2._SetDifferenceResponse.SerializeToString,
            ),
            'SetContains': grpc.unary_unary_rpc_method_handler(
                    servicer.SetContains,
                    request_deserializer=cacheclient__pb2._SetContainsRequest.FromString,
                    response_serializer=cacheclient__pb2._SetContainsResponse.SerializeToString,
            ),
            'SetLength': grpc.unary_unary_rpc_method_handler(
                    servicer.SetLength,
                    request_deserializer=cacheclient__pb2._SetLengthRequest.FromString,
                    response_serializer=cacheclient__pb2._SetLengthResponse.SerializeToString,
            ),
            'SetPop': grpc.unary_unary_rpc_method_handler(
                    servicer.SetPop,
                    request_deserializer=cacheclient__pb2._SetPopRequest.FromString,
                    response_serializer=cacheclient__pb2._SetPopResponse.SerializeToString,
            ),
            'ListPushFront': grpc.unary_unary_rpc_method_handler(
                    servicer.ListPushFront,
                    request_deserializer=cacheclient__pb2._ListPushFrontRequest.FromString,
                    response_serializer=cacheclient__pb2._ListPushFrontResponse.SerializeToString,
            ),
            'ListPushBack': grpc.unary_unary_rpc_method_handler(
                    servicer.ListPushBack,
                    request_deserializer=cacheclient__pb2._ListPushBackRequest.FromString,
                    response_serializer=cacheclient__pb2._ListPushBackResponse.SerializeToString,
            ),
            'ListPopFront': grpc.unary_unary_rpc_method_handler(
                    servicer.ListPopFront,
                    request_deserializer=cacheclient__pb2._ListPopFrontRequest.FromString,
                    response_serializer=cacheclient__pb2._ListPopFrontResponse.SerializeToString,
            ),
            'ListPopBack': grpc.unary_unary_rpc_method_handler(
                    servicer.ListPopBack,
                    request_deserializer=cacheclient__pb2._ListPopBackRequest.FromString,
                    response_serializer=cacheclient__pb2._ListPopBackResponse.SerializeToString,
            ),
            'ListErase': grpc.unary_unary_rpc_method_handler(
                    servicer.ListErase,
                    request_deserializer=cacheclient__pb2._ListEraseRequest.FromString,
                    response_serializer=cacheclient__pb2._ListEraseResponse.SerializeToString,
            ),
            'ListRemove': grpc.unary_unary_rpc_method_handler(
                    servicer.ListRemove,
                    request_deserializer=cacheclient__pb2._ListRemoveRequest.FromString,
                    response_serializer=cacheclient__pb2._ListRemoveResponse.SerializeToString,
            ),
            'ListFetch': grpc.unary_unary_rpc_method_handler(
                    servicer.ListFetch,
                    request_deserializer=cacheclient__pb2._ListFetchRequest.FromString,
                    response_serializer=cacheclient__pb2._ListFetchResponse.SerializeToString,
            ),
            'ListLength': grpc.unary_unary_rpc_method_handler(
                    servicer.ListLength,
                    request_deserializer=cacheclient__pb2._ListLengthRequest.FromString,
                    response_serializer=cacheclient__pb2._ListLengthResponse.SerializeToString,
            ),
            'ListConcatenateFront': grpc.unary_unary_rpc_method_handler(
                    servicer.ListConcatenateFront,
                    request_deserializer=cacheclient__pb2._ListConcatenateFrontRequest.FromString,
                    response_serializer=cacheclient__pb2._ListConcatenateFrontResponse.SerializeToString,
            ),
            'ListConcatenateBack': grpc.unary_unary_rpc_method_handler(
                    servicer.ListConcatenateBack,
                    request_deserializer=cacheclient__pb2._ListConcatenateBackRequest.FromString,
                    response_serializer=cacheclient__pb2._ListConcatenateBackResponse.SerializeToString,
            ),
            'ListRetain': grpc.unary_unary_rpc_method_handler(
                    servicer.ListRetain,
                    request_deserializer=cacheclient__pb2._ListRetainRequest.FromString,
                    response_serializer=cacheclient__pb2._ListRetainResponse.SerializeToString,
            ),
            'SortedSetPut': grpc.unary_unary_rpc_method_handler(
                    servicer.SortedSetPut,
                    request_deserializer=cacheclient__pb2._SortedSetPutRequest.FromString,
                    response_serializer=cacheclient__pb2._SortedSetPutResponse.SerializeToString,
            ),
            'SortedSetFetch': grpc.unary_unary_rpc_method_handler(
                    servicer.SortedSetFetch,
                    request_deserializer=cacheclient__pb2._SortedSetFetchRequest.FromString,
                    response_serializer=cacheclient__pb2._SortedSetFetchResponse.SerializeToString,
            ),
            'SortedSetGetScore': grpc.unary_unary_rpc_method_handler(
                    servicer.SortedSetGetScore,
                    request_deserializer=cacheclient__pb2._SortedSetGetScoreRequest.FromString,
                    response_serializer=cacheclient__pb2._SortedSetGetScoreResponse.SerializeToString,
            ),
            'SortedSetRemove': grpc.unary_unary_rpc_method_handler(
                    servicer.SortedSetRemove,
                    request_deserializer=cacheclient__pb2._SortedSetRemoveRequest.FromString,
                    response_serializer=cacheclient__pb2._SortedSetRemoveResponse.SerializeToString,
            ),
            'SortedSetIncrement': grpc.unary_unary_rpc_method_handler(
                    servicer.SortedSetIncrement,
                    request_deserializer=cacheclient__pb2._SortedSetIncrementRequest.FromString,
                    response_serializer=cacheclient__pb2._SortedSetIncrementResponse.SerializeToString,
            ),
            'SortedSetGetRank': grpc.unary_unary_rpc_method_handler(
                    servicer.SortedSetGetRank,
                    request_deserializer=cacheclient__pb2._SortedSetGetRankRequest.FromString,
                    response_serializer=cacheclient__pb2._SortedSetGetRankResponse.SerializeToString,
            ),
            'SortedSetLength': grpc.unary_unary_rpc_method_handler(
                    servicer.SortedSetLength,
                    request_deserializer=cacheclient__pb2._SortedSetLengthRequest.FromString,
                    response_serializer=cacheclient__pb2._SortedSetLengthResponse.SerializeToString,
            ),
            'SortedSetLengthByScore': grpc.unary_unary_rpc_method_handler(
                    servicer.SortedSetLengthByScore,
                    request_deserializer=cacheclient__pb2._SortedSetLengthByScoreRequest.FromString,
                    response_serializer=cacheclient__pb2._SortedSetLengthByScoreResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'cache_client.Scs', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Scs(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Get(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/cache_client.Scs/Get',
            cacheclient__pb2._GetRequest.SerializeToString,
            cacheclient__pb2._GetResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Set(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/cache_client.Scs/Set',
            cacheclient__pb2._SetRequest.SerializeToString,
            cacheclient__pb2._SetResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetIfNotExists(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/cache_client.Scs/SetIfNotExists',
            cacheclient__pb2._SetIfNotExistsRequest.SerializeToString,
            cacheclient__pb2._SetIfNotExistsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Delete(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/cache_client.Scs/Delete',
            cacheclient__pb2._DeleteRequest.SerializeToString,
            cacheclient__pb2._DeleteResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def KeysExist(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/cache_client.Scs/KeysExist',
            cacheclient__pb2._KeysExistRequest.SerializeToString,
            cacheclient__pb2._KeysExistResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Increment(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/cache_client.Scs/Increment',
            cacheclient__pb2._IncrementRequest.SerializeToString,
            cacheclient__pb2._IncrementResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateTtl(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/cache_client.Scs/UpdateTtl',
            cacheclient__pb2._UpdateTtlRequest.SerializeToString,
            cacheclient__pb2._UpdateTtlResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ItemGetTtl(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/cache_client.Scs/ItemGetTtl',
            cacheclient__pb2._ItemGetTtlRequest.SerializeToString,
            cacheclient__pb2._ItemGetTtlResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ItemGetType(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/cache_client.Scs/ItemGetType',
            cacheclient__pb2._ItemGetTypeRequest.SerializeToString,
            cacheclient__pb2._ItemGetTypeResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DictionaryGet(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/cache_client.Scs/DictionaryGet',
            cacheclient__pb2._DictionaryGetRequest.SerializeToString,
            cacheclient__pb2._DictionaryGetResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DictionaryFetch(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/cache_client.Scs/DictionaryFetch',
            cacheclient__pb2._DictionaryFetchRequest.SerializeToString,
            cacheclient__pb2._DictionaryFetchResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DictionarySet(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/cache_client.Scs/DictionarySet',
            cacheclient__pb2._DictionarySetRequest.SerializeToString,
            cacheclient__pb2._DictionarySetResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DictionaryIncrement(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/cache_client.Scs/DictionaryIncrement',
            cacheclient__pb2._DictionaryIncrementRequest.SerializeToString,
            cacheclient__pb2._DictionaryIncrementResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DictionaryDelete(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/cache_client.Scs/DictionaryDelete',
            cacheclient__pb2._DictionaryDeleteRequest.SerializeToString,
            cacheclient__pb2._DictionaryDeleteResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DictionaryLength(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/cache_client.Scs/DictionaryLength',
            cacheclient__pb2._DictionaryLengthRequest.SerializeToString,
            cacheclient__pb2._DictionaryLengthResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetFetch(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/cache_client.Scs/SetFetch',
            cacheclient__pb2._SetFetchRequest.SerializeToString,
            cacheclient__pb2._SetFetchResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetUnion(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/cache_client.Scs/SetUnion',
            cacheclient__pb2._SetUnionRequest.SerializeToString,
            cacheclient__pb2._SetUnionResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetDifference(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/cache_client.Scs/SetDifference',
            cacheclient__pb2._SetDifferenceRequest.SerializeToString,
            cacheclient__pb2._SetDifferenceResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetContains(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/cache_client.Scs/SetContains',
            cacheclient__pb2._SetContainsRequest.SerializeToString,
            cacheclient__pb2._SetContainsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetLength(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/cache_client.Scs/SetLength',
            cacheclient__pb2._SetLengthRequest.SerializeToString,
            cacheclient__pb2._SetLengthResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetPop(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/cache_client.Scs/SetPop',
            cacheclient__pb2._SetPopRequest.SerializeToString,
            cacheclient__pb2._SetPopResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListPushFront(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/cache_client.Scs/ListPushFront',
            cacheclient__pb2._ListPushFrontRequest.SerializeToString,
            cacheclient__pb2._ListPushFrontResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListPushBack(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/cache_client.Scs/ListPushBack',
            cacheclient__pb2._ListPushBackRequest.SerializeToString,
            cacheclient__pb2._ListPushBackResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListPopFront(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/cache_client.Scs/ListPopFront',
            cacheclient__pb2._ListPopFrontRequest.SerializeToString,
            cacheclient__pb2._ListPopFrontResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListPopBack(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/cache_client.Scs/ListPopBack',
            cacheclient__pb2._ListPopBackRequest.SerializeToString,
            cacheclient__pb2._ListPopBackResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListErase(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/cache_client.Scs/ListErase',
            cacheclient__pb2._ListEraseRequest.SerializeToString,
            cacheclient__pb2._ListEraseResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListRemove(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/cache_client.Scs/ListRemove',
            cacheclient__pb2._ListRemoveRequest.SerializeToString,
            cacheclient__pb2._ListRemoveResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListFetch(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/cache_client.Scs/ListFetch',
            cacheclient__pb2._ListFetchRequest.SerializeToString,
            cacheclient__pb2._ListFetchResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListLength(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/cache_client.Scs/ListLength',
            cacheclient__pb2._ListLengthRequest.SerializeToString,
            cacheclient__pb2._ListLengthResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListConcatenateFront(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/cache_client.Scs/ListConcatenateFront',
            cacheclient__pb2._ListConcatenateFrontRequest.SerializeToString,
            cacheclient__pb2._ListConcatenateFrontResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListConcatenateBack(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/cache_client.Scs/ListConcatenateBack',
            cacheclient__pb2._ListConcatenateBackRequest.SerializeToString,
            cacheclient__pb2._ListConcatenateBackResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListRetain(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/cache_client.Scs/ListRetain',
            cacheclient__pb2._ListRetainRequest.SerializeToString,
            cacheclient__pb2._ListRetainResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SortedSetPut(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/cache_client.Scs/SortedSetPut',
            cacheclient__pb2._SortedSetPutRequest.SerializeToString,
            cacheclient__pb2._SortedSetPutResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SortedSetFetch(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/cache_client.Scs/SortedSetFetch',
            cacheclient__pb2._SortedSetFetchRequest.SerializeToString,
            cacheclient__pb2._SortedSetFetchResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SortedSetGetScore(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/cache_client.Scs/SortedSetGetScore',
            cacheclient__pb2._SortedSetGetScoreRequest.SerializeToString,
            cacheclient__pb2._SortedSetGetScoreResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SortedSetRemove(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/cache_client.Scs/SortedSetRemove',
            cacheclient__pb2._SortedSetRemoveRequest.SerializeToString,
            cacheclient__pb2._SortedSetRemoveResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SortedSetIncrement(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/cache_client.Scs/SortedSetIncrement',
            cacheclient__pb2._SortedSetIncrementRequest.SerializeToString,
            cacheclient__pb2._SortedSetIncrementResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SortedSetGetRank(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/cache_client.Scs/SortedSetGetRank',
            cacheclient__pb2._SortedSetGetRankRequest.SerializeToString,
            cacheclient__pb2._SortedSetGetRankResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SortedSetLength(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/cache_client.Scs/SortedSetLength',
            cacheclient__pb2._SortedSetLengthRequest.SerializeToString,
            cacheclient__pb2._SortedSetLengthResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SortedSetLengthByScore(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/cache_client.Scs/SortedSetLengthByScore',
            cacheclient__pb2._SortedSetLengthByScoreRequest.SerializeToString,
            cacheclient__pb2._SortedSetLengthByScoreResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
